
	
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.*;

import javax.swing.JTextArea;

public class Game {

	private int stockCount = 0;
	ArrayList<Stock> myStocks = new ArrayList<Stock>(10);	
	Scanner stringScan = new Scanner(System.in);
	Scanner intScan = new Scanner(System.in);
	//new DecimalFormat("#.##").format(dblVar);
	private int months;
	private double originalPrice = 0;
	private double finalPrice = 0;
	private double currentPrice = 0;
	Stock stock1 = new Stock("BAC", 17.00, .05);
	Stock stock2 = new Stock("Yahoo", 45.00, .1);
	Stock stock3 = new Stock("Apple", 130.00, .08);
	Stock stock4 = new Stock("Starbcks", 52.00, .06);
	Stock stock5 = new Stock("Celadon", 6.00, .45);
	Stock stock6 = new Stock("Inx", 3.00, .9);
	Stock stock7 = new Stock("MMM", 300.00, .01);
	Stock stock8 = new Stock("Boeing", 150.00, .02);
	Stock stock9 = new Stock("Intel", 35.00, .12);
	Stock stock10 = new Stock("Nike", 105.00, .03);
	
	private Stock[] stocks = {stock1, stock2, stock3, stock4, stock5, stock6, stock7, stock8, stock9, stock10};
	ArrayList<Integer> numStocks = new ArrayList<Integer>(20);
	private int numChosen = 0;
	private int plus = (int) (Math.random() * 40) - 10;
	private double overallRisk;
	private int month = 0;
	private String space;
	
	public Game(){
		//Player player = new Player();
		game();
	}
	
	public void game(){
		System.out.println("You may participate for a maximum of 600 months, or 50 years.");
		System.out.println("Here are your stocks: ");
		for (int i = 0; i < stocks.length; i++){
			System.out.println("Stock " + (i+1) + ": " + stocks[i].toString());
		}
		System.out.println();
		chooseStocks();
	}
		
	public void chooseStocks(){
		String chosenStock = "";
		System.out.println("Please enter a stock name. If you are done choosing stocks, enter \"done\".");
		chosenStock = stringScan.nextLine();
		if (chosenStock.equals("done") == false){
			System.out.println("Please select how many of that stock you would like to buy.");
			numChosen = intScan.nextInt();
			for (int i = 0; i < stocks.length; i++){
				if (chosenStock.equalsIgnoreCase(stocks[i].getName())){
					myStocks.add(stocks[i]);
					stocks[i].setNumber(numChosen);
					chooseStocks();
				}
			}
		}
		else{
			int numerator = 0;
			for (int i = 0; i < myStocks.size(); i++){
				numerator += myStocks.get(i).getRiskiness();
			}
			overallRisk = numerator / myStocks.size();
			simulate();
		}
	}
	
	/*public void simulate(){
		originalPrice = netWorth();
		System.out.println();
		System.out.println("Monthly updates:");
		for (int i = 0; i < 600; i++){
			for (int j = 0; j < myStocks.size(); j++){
				monthlyValueUpdate(myStocks.get(j));
			}
			events();
			System.out.print((i + 1) + ": ");
			for (int k = 0; k < myStocks.size(); k++){
				System.out.print(myStocks.get(k).getName() + "(" + myStocks.get(k).getNumber() + "): $" + roundTwoDecimals(myStocks.get(k).getValue()) + "	");
			}
			System.out.println();
		}
		System.out.println();
		finalPrice = netWorth();
		display();
	}*/
	
	public void simulate(){
		originalPrice = netWorth();
		System.out.println("Original value: $" + originalPrice);
		System.out.println();
		System.out.println("Progress one month: press space then enter");
		System.out.println("Check progress: enter \"check\", sell stocks: enter \"sell\", buy stocks: enter \"buy\"");
		spaceUpdate();
	}
	
	public void spaceUpdate(){
		space = stringScan.nextLine();
		if (space.equals(" ")){
			for (int j = 0; j < myStocks.size(); j++){
				monthlyValueUpdate(myStocks.get(j));
			}
			events();
			System.out.print((month + 1) + ": ");
			for (int k = 0; k < myStocks.size(); k++){
				System.out.print(myStocks.get(k).getName() + "(" + myStocks.get(k).getNumber() + "): $" + roundTwoDecimals(myStocks.get(k).getValue()) + "	");
			}
			month++;
			space = null;
			spaceUpdate();
		}
		else if (space.equals("check")){
			System.out.println("Current value: $" + roundTwoDecimals(netWorth()));
			System.out.println("Profit: $" + roundTwoDecimals((netWorth()) - originalPrice));
			spaceUpdate();
		}
		else if (space.equals("sell")){
			sellStocks();
		}
		else if (space.equals("buy")){
			buyStocks();
		}
	}
	
	public void buyStocks(){
		String chosenStock = "";
		System.out.println("These are your stocks:");
		for (int i = 0; i < myStocks.size(); i++){
			System.out.println(myStocks.get(i).getName());
		}
		System.out.println("Please enter a stock name. If you are done choosing which stocks to buy, enter \"done\".");
		chosenStock = stringScan.nextLine();
		if (chosenStock.equals("done") == false){
			System.out.println("Please select how many of that stock you would like to buy.");
			numChosen = intScan.nextInt();
			for (int i = 0; i < myStocks.size(); i++){
				if (chosenStock.equalsIgnoreCase(myStocks.get(i).getName())){
					myStocks.get(i).setNumber(myStocks.get(i).getNumber()+numChosen);
					System.out.println("Please press space");
					spaceUpdate();
				}
			}
		}
	}
	
	public void sellStocks(){
		String chosenStock = "";
		System.out.println("These are your stocks:");
		for (int i = 0; i < myStocks.size(); i++){
			System.out.println(myStocks.get(i).getName());
		}
		System.out.println("Please enter a stock name. If you are done choosing which stocks to sell, enter \"done\".");
		chosenStock = stringScan.nextLine();
		if (chosenStock.equals("done") == false){
			System.out.println("Please select how many of that stock you would like to sell.");
			numChosen = intScan.nextInt();
			for (int i = 0; i < myStocks.size(); i++){
				if (chosenStock.equalsIgnoreCase(myStocks.get(i).getName())){
					myStocks.get(i).setNumber(myStocks.get(i).getNumber()-numChosen);
					System.out.println("Please press space");
					spaceUpdate();
				}
			}
		}
	}
	
	/*public void exchangeStocks(){
		String answer;
		System.out.println("Would you like to buy or sell stocks?");
		System.out.println("Enter \"sell\" to sell, \"buy\" to buy, or \"no\" to continue");
		answer = stringScan.nextLine();
		if (answer.equalsIgnoreCase("buy")){
			
		}
		else if (answer.equalsIgnoreCase("sell")){
			String chosenStock = "";
			System.out.println("Please enter a stock name. If you are done choosing which stocks to sell, enter \"done\".");
			chosenStock = stringScan.nextLine();
			if (chosenStock.equals("done") == false){
				System.out.println("Please select how many of that stock you would like to sell.");
				numChosen = intScan.nextInt();
				for (int i = 0; i < myStocks.size(); i++){
					if (chosenStock.equalsIgnoreCase(myStocks.get(i).getName())){
						myStocks.get(i).setNumber(myStocks.get(i).getNumber()-numChosen);
						exchangeStocks();
					}
				}
			}
		}
		else if (answer.equalsIgnoreCase("no")){
			
		}
		else{
			System.out.println("Invalid input.");
			exchangeStocks();
		}
	}*/
	
	public void monthlyValueUpdate(Stock myStock){
		double r = myStock.getRiskiness() * Math.random();
		int posNeg = (int) ((Math.random() * 100) + 1);
		if (posNeg >= ((myStock.getRiskiness() * 100) + plus)){
			myStock.setValue(myStock.getValue() + (myStock.getValue() * r));
		}
		else
			myStock.setValue(myStock.getValue() - (myStock.getValue() * r));
	}
	
	public double netWorth(){
		double value = 0;
		for (int i = 0; i < myStocks.size(); i++){
			value += (myStocks.get(i).getValue()) * myStocks.get(i).getNumber();
		}
		return value;
	}
	
	public double roundTwoDecimals(double d){
		DecimalFormat twoDForm = new DecimalFormat("#.##");
		return Double.valueOf(twoDForm.format(d));
	}
	
	public void display(){
		System.out.println("Original value of stocks = $" + roundTwoDecimals(originalPrice) + "\nFinal value of stocks = $" + roundTwoDecimals(finalPrice));
	}
	
	public void events(){
		
		 Random rnd = new Random();
		 int num = rnd.nextInt(myStocks.size());
		 int possibility = rnd.nextInt(100)+1;
		            if(possibility <= 70){
		            	
		            }
		            else if(possibility <= 75){
		            	System.out.println();
		            	System.out.println("\tNew product/technology made by " + myStocks.get(num).getName() + "!");
		            	System.out.println("\tStock value increase 10%!");
		            	System.out.println();
		            	myStocks.get(num).setValue(myStocks.get(num).getValue() +(myStocks.get(num).getValue() * 0.10));
		            }
		            else if(possibility <= 88){
		                if(myStocks.get(num).getValue() > 35){
		                	System.out.println();
		                	System.out.println("\tA few flaw/bug is found in the product of " + myStocks.get(num).getName() + "!");
			                System.out.println("\tStock value decrease 15%!");
			                System.out.println();
			                myStocks.get(num).setValue(myStocks.get(num).getValue() -(myStocks.get(num).getValue() * 0.35));
		                }
		            }
		            else if(possibility <= 90){
		            	System.out.println();
		            	System.out.println("\t" + myStocks.get(num).getName() +" is changing a new CEO!");
		            	System.out.println("\tStock value is randomized!");
		            	System.out.println();
		            	myStocks.get(num).setValue(myStocks.get(num).getValue() + (rnd.nextDouble() * (2 * myStocks.get(num).getRiskiness()) - myStocks.get(num).getRiskiness()) * (myStocks.get(num).getRiskiness() * 2));
		            }
		            else if(possibility <= 98){
		            	if(myStocks.get(num).getValue() > 20){
		            		System.out.println();
		            		System.out.println("\t" + myStocks.get(num).getName() + "'s server has been hacked!");
			            	System.out.println("\tStock Value decrease 20%!");
			            	System.out.println();
			            	myStocks.get(num).setValue(myStocks.get(num).getValue() - (myStocks.get(num).getValue()*0.20));
		            	}
		            }
		            else if(possibility <= 100){
		            	System.out.println();
		            	System.out.println("\tLarge amount of people invested in " + myStocks.get(num).getName() + "!");
		            	System.out.println("\tStock value increase 15%!");
		            	System.out.println();
		            	myStocks.get(num).setValue(myStocks.get(num).getValue() + (myStocks.get(num).getValue()*0.15));
		            }
		}
}
